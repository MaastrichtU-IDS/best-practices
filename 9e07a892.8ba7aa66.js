(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{109:function(e,t,a){"use strict";a.d(t,"a",(function(){return b})),a.d(t,"b",(function(){return h}));var r=a(0),o=a.n(r);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function c(e,t){if(null==e)return{};var a,r,o=function(e,t){if(null==e)return{};var a,r,o={},n=Object.keys(e);for(r=0;r<n.length;r++)a=n[r],t.indexOf(a)>=0||(o[a]=e[a]);return o}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)a=n[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}var p=o.a.createContext({}),s=function(e){var t=o.a.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},b=function(e){var t=s(e.components);return o.a.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},d=o.a.forwardRef((function(e,t){var a=e.components,r=e.mdxType,n=e.originalType,i=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),b=s(a),d=r,h=b["".concat(i,".").concat(d)]||b[d]||u[d]||n;return a?o.a.createElement(h,l(l({ref:t},p),{},{components:a})):o.a.createElement(h,l({ref:t},p))}));function h(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var n=a.length,i=new Array(n);i[0]=d;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var p=2;p<n;p++)i[p]=a[p];return o.a.createElement.apply(null,i)}return o.a.createElement.apply(null,a)}d.displayName="MDXCreateElement"},89:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return i})),a.d(t,"metadata",(function(){return l})),a.d(t,"toc",(function(){return c})),a.d(t,"default",(function(){return s}));var r=a(3),o=a(7),n=(a(0),a(109)),i={id:"publish-rdf-data",title:"Publish RDF data"},l={unversionedId:"publish-rdf-data",id:"publish-rdf-data",isDocsHomePage:!1,title:"Publish RDF data",description:"Publish to our public GraphDB triplestore",source:"@site/docs/publish-rdf-data.md",slug:"/publish-rdf-data",permalink:"/best-practices/docs/publish-rdf-data",editUrl:"https://github.com/MaastrichtU-IDS/best-practices/edit/master/website/docs/publish-rdf-data.md",version:"current",lastUpdatedBy:"Vincent Emonet",lastUpdatedAt:1609345831,sidebar:"docs",previous:{title:"FAIR workflows",permalink:"/best-practices/docs/fair-workflows"},next:{title:"Try IDS workshops",permalink:"/best-practices/docs/education-workshops"}},c=[{value:"Create the GraphDB repository",id:"create-the-graphdb-repository",children:[]},{value:"Edit your repository access",id:"edit-your-repository-access",children:[]},{value:"Optional: enable GraphDB search index",id:"optional-enable-graphdb-search-index",children:[]},{value:"Automate data processing and loading",id:"automate-data-processing-and-loading",children:[]}],p={toc:c};function s(e){var t=e.components,a=Object(o.a)(e,["components"]);return Object(n.b)("wrapper",Object(r.a)({},p,a,{components:t,mdxType:"MDXLayout"}),Object(n.b)("h1",{id:"publish-to-our-public-graphdb-triplestore"},"Publish to our public GraphDB triplestore"),Object(n.b)("p",null,"Create a new repository on our GraphDB triplestore at ",Object(n.b)("a",Object(r.a)({parentName:"p"},{href:"https://graphdb.dumontierlab.com/"}),"https://graphdb.dumontierlab.com/")),Object(n.b)("blockquote",null,Object(n.b)("p",{parentName:"blockquote"},"Ask us to get the permissions to create new repositories after creating an account.")),Object(n.b)("h3",{id:"create-the-graphdb-repository"},"Create the GraphDB repository"),Object(n.b)("p",null,"\ud83d\udc69\u200d\ud83d\udcbb Go to ",Object(n.b)("strong",{parentName:"p"},"Setup")," > ",Object(n.b)("strong",{parentName:"p"},"Repositories")," > ",Object(n.b)("strong",{parentName:"p"},"Create Repository")),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"Or click here: ",Object(n.b)("a",Object(r.a)({parentName:"li"},{href:"https://graphdb.dumontierlab.com/repository/create"}),"https://graphdb.dumontierlab.com/repository/create"))),Object(n.b)("p",null,"\ud83d\udc68\u200d\ud83d\udcbb Choose the settings of your repository (leave the default if not mentioned here):"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"Ruleset"),": use ",Object(n.b)("strong",{parentName:"li"},"RDFS-Plus (Optimized)")," by default, or a OWL ruleset if you are performing reasoning using OWL ontologies"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"Supports SHACL validation"),": enable if you plan on using SHACL shapes to validate the RDF loaded in the repository. ",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Visit ",Object(n.b)("a",Object(r.a)({parentName:"li"},{href:"https://maastrichtu-ids.github.io/shapes-of-you"}),"https://maastrichtu-ids.github.io/shapes-of-you")," to find SHACL Shapes"),Object(n.b)("li",{parentName:"ul"},"Add new shapes to IDS Shapes repository: ",Object(n.b)("a",Object(r.a)({parentName:"li"},{href:"https://github.com/MaastrichtU-IDS/shacl-shapes"}),"https://github.com/MaastrichtU-IDS/shacl-shapes")))),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"Use context index"),": ",Object(n.b)("strong",{parentName:"li"},"enable")," this to index the contexts (aka. graphs)"),Object(n.b)("li",{parentName:"ul"},"For large dataset:",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"Entity index size"),": increase this to ",Object(n.b)("strong",{parentName:"li"},"999999999")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"Entity ID bit-size"),": increase this to ",Object(n.b)("strong",{parentName:"li"},"40"))))),Object(n.b)("p",null,"To access your repository:"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"SPARQL endpoint at ",Object(n.b)("a",Object(r.a)({parentName:"li"},{href:"https://graphdb.dumontierlab.com/repositories/my-repository"}),"https://graphdb.dumontierlab.com/repositories/my-repository")),Object(n.b)("li",{parentName:"ul"},"SPARQL endpoint to run update queries (e.g. ",Object(n.b)("inlineCode",{parentName:"li"},"INSERT"),"): ",Object(n.b)("a",Object(r.a)({parentName:"li"},{href:"https://graphdb.dumontierlab.com/repositories/my-repository/statements"}),"https://graphdb.dumontierlab.com/repositories/my-repository/statements")),Object(n.b)("li",{parentName:"ul"},"GraphDB admin web UI: ",Object(n.b)("a",Object(r.a)({parentName:"li"},{href:"https://graphdb.dumontierlab.com"}),"https://graphdb.dumontierlab.com")," and change the repository using the button at the top right of the screen.")),Object(n.b)("h3",{id:"edit-your-repository-access"},"Edit your repository access"),Object(n.b)("p",null,"By default your repository will not be available publicly."),Object(n.b)("p",null,"\ud83d\udc69\u200d\ud83d\udcbb Go to ",Object(n.b)("strong",{parentName:"p"},Object(n.b)("a",Object(r.a)({parentName:"strong"},{href:"https://graphdb.dumontierlab.com/users"}),"Users and Access"))),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"Change the ",Object(n.b)("strong",{parentName:"li"},"Free Access Settings")," (top right of the page) to enable public access to read the SPARQL endpoint of your repository",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Find your repository and enable ",Object(n.b)("strong",{parentName:"li"},"Read")," access (checkbox on the left)"))),Object(n.b)("li",{parentName:"ul"},"You can also give ",Object(n.b)("strong",{parentName:"li"},"Write")," access to other users",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"We usually give ",Object(n.b)("strong",{parentName:"li"},"Write")," access to the ",Object(n.b)("inlineCode",{parentName:"li"},"import_user")," to be used in automated workflow (to automatically upload new data to the repository)")))),Object(n.b)("h3",{id:"optional-enable-graphdb-search-index"},"Optional: enable GraphDB search index"),Object(n.b)("p",null,"You can easily enable GraphDB ",Object(n.b)("a",Object(r.a)({parentName:"p"},{href:"https://lucene.apache.org/"}),"Lucene search index")," to quickly search string in your triplestore"),Object(n.b)("p",null,"Here is an example to create a search index for the ",Object(n.b)("inlineCode",{parentName:"p"},"rdfs:label")," and ",Object(n.b)("inlineCode",{parentName:"p"},"dct:description")," properties."),Object(n.b)("p",null,"\ud83d\udc68\u200d\ud83d\udcbb Running this in your GraphDB repository SPARQL editor will insert the triples and the search index will be created (just wait a bit)"),Object(n.b)("pre",null,Object(n.b)("code",Object(r.a)({parentName:"pre"},{className:"language-SPARQL"}),'PREFIX luc: <http://www.ontotext.com/owlim/lucene#>\nINSERT DATA { \n    # luc:moleculeSize luc:setParam "1" .\n    luc:includePredicates luc:setParam "http://www.w3.org/2000/01/rdf-schema#label http://purl.org/dc/terms/description" .\n    luc:useRDFRank luc:setParam "yes" .\n    luc:searchIndex luc:createIndex "true" .\n}\n')),Object(n.b)("p",null,"Query the GraphDB search index:"),Object(n.b)("pre",null,Object(n.b)("code",Object(r.a)({parentName:"pre"},{className:"language-SPARQL"}),"PREFIX luc: <http://www.ontotext.com/owlim/lucene#>\nSELECT ?foundUri ?foundLabel {\n    ?foundLabel luc:searchIndex 'TEXT_TO_SEARCH*' ;\n    luc:score ?score .\n    ?foundUri ?p ?foundLabel .\n} ORDER BY ?score LIMIT 200\n")),Object(n.b)("blockquote",null,Object(n.b)("p",{parentName:"blockquote"},"Note we are using a ",Object(n.b)("inlineCode",{parentName:"p"},"*")," wildcard at the end to match all strings starting with the ",Object(n.b)("inlineCode",{parentName:"p"},"TEXT_TO_SEARCH"))),Object(n.b)("h3",{id:"automate-data-processing-and-loading"},"Automate data processing and loading"),Object(n.b)("p",null,"RDF data can be automatically generated and loaded using GitHub Actions workflows."),Object(n.b)("p",null,"See ",Object(n.b)("a",Object(r.a)({parentName:"p"},{href:"https://github.com/MaastrichtU-IDS/food-claims-kg/blob/master/.github/workflows/generate-rdf.yml"}),"this workflow")," to generate data using a simple ",Object(n.b)("inlineCode",{parentName:"p"},"convert_to_rdf.py")," file and load it in the triplestore"),Object(n.b)("ol",null,Object(n.b)("li",{parentName:"ol"},"Download input file from Google Docs and run python script to generate RDF")),Object(n.b)("pre",null,Object(n.b)("code",Object(r.a)({parentName:"pre"},{className:"language-yaml"}),'    - name: Install Python dependencies\n      run: |\n        python -m pip install -r requirements.txt\n    - name: Download CSV files from Google docs\n      run: |\n        mkdir -p data/output\n        wget -O data/food-claims-kg.xlsx "https://docs.google.com/spreadsheets/d/1RWZ6AlGB8m7PO5kjsbbbeI4ETLwvKLOvkrzOpl8zAM8/export?format=xlsx&id=1RWZ6AlGB8m7PO5kjsbbbeI4ETLwvKLOvkrzOpl8zAM8"\n    - name: Run Python script to generate RDF\n      run: |\n        python src/convert_to_rdf.py\n')),Object(n.b)("ol",{start:2},Object(n.b)("li",{parentName:"ol"},"Optional: clear existing graph")),Object(n.b)("pre",null,Object(n.b)("code",Object(r.a)({parentName:"pre"},{className:"language-yaml"}),'    - name: Clear existing graph\n      uses: vemonet/sparql-operations-action@v1\n      with:\n        query: "CLEAR GRAPH <https://w3id.org/foodkg/graph>"\n        endpoint: https://graphdb.dumontierlab.com/repositories/FoodHealthClaimsKG/statements\n        user: ${{ secrets.GRAPHDB_USER }}\n        password: ${{ secrets.GRAPHDB_PASSWORD }}\n')),Object(n.b)("ol",{start:3},Object(n.b)("li",{parentName:"ol"},"Load RDF file previously generated by the workflow in ",Object(n.b)("inlineCode",{parentName:"li"},"data/output/food_health_kg.ttl")," for the example")),Object(n.b)("pre",null,Object(n.b)("code",Object(r.a)({parentName:"pre"},{className:"language-yaml"}),'    - name: Import RDF files in the triplestore\n      uses: MaastrichtU-IDS/RdfUpload@master\n      with:\n        file: data/output/food_health_kg.ttl\n        endpoint: https://graphdb.dumontierlab.com/repositories/FoodHealthClaimsKG/statements\n        user: ${{ secrets.GRAPHDB_USER }}\n        password: ${{ secrets.GRAPHDB_PASSWORD }}\n        graph: "https://w3id.org/foodkg/graph"\n')),Object(n.b)("blockquote",null,Object(n.b)("p",{parentName:"blockquote"},"You will need to define those 2 secrets in your GitHub repository workflows secrets: ",Object(n.b)("inlineCode",{parentName:"p"},"GRAPHDB_USER")," and ",Object(n.b)("inlineCode",{parentName:"p"},"GRAPHDB_PASSWORD"))),Object(n.b)("h1",{id:"deploy-a-serverless-api"},"Deploy a serverless API"),Object(n.b)("p",null,"Deploying an API to access and explore your SPARQL endpoint is really easy to do with ",Object(n.b)("a",Object(r.a)({parentName:"p"},{href:"http://grlc.io/"}),"grlc.io"),". You just need to define a few SPARQL queries in a GitHub repository, and grlc.io will handle everything else to expose a Swagger API (aka. Open API) to access your knowledge graph. "),Object(n.b)("blockquote",null,Object(n.b)("p",{parentName:"blockquote"},"\u2139\ufe0f This API will be the entrypoint for people who want to discover your data: they can quickly explore and understand the structure of your knowledge graph through the query you exposed.")),Object(n.b)("p",null,"To make this example easier to reproduce, we will use the existing ",Object(n.b)("a",Object(r.a)({parentName:"p"},{href:"http://grlc.io/"}),"grlc.io")," API deployment defined for the ",Object(n.b)("a",Object(r.a)({parentName:"p"},{href:"https://github.com/MaastrichtU-IDS/food-claims-kg"}),"food-claims-kg")," as example"),Object(n.b)("ol",null,Object(n.b)("li",{parentName:"ol"},Object(n.b)("p",{parentName:"li"},"\ud83d\udc69\u200d\ud83d\udcbb Provide the URL of SPARQL endpoint to query in the ",Object(n.b)("a",Object(r.a)({parentName:"p"},{href:"https://github.com/MaastrichtU-IDS/food-claims-kg/blob/master/endpoint.txt"}),Object(n.b)("inlineCode",{parentName:"a"},"endpoint.txt")," file"))),Object(n.b)("li",{parentName:"ol"},Object(n.b)("p",{parentName:"li"},"\ud83d\udc68\u200d\ud83d\udcbb Define the SPARQL queries in ",Object(n.b)("inlineCode",{parentName:"p"},".rq")," files at the base of the git repo."),Object(n.b)("blockquote",{parentName:"li"},Object(n.b)("p",{parentName:"blockquote"},"See ",Object(n.b)("a",Object(r.a)({parentName:"p"},{href:"https://github.com/MaastrichtU-IDS/food-claims-kg/blob/master/get-claims-for-food.rq"}),"this example of a ",Object(n.b)("inlineCode",{parentName:"a"},".rq")," file")," to define a SPARQL query with a parameter (used to filter using ",Object(n.b)("inlineCode",{parentName:"p"},"regex()"),")."))),Object(n.b)("li",{parentName:"ol"},Object(n.b)("p",{parentName:"li"},"That's it \ud83e\udd2f you can go to your API Swagger UI automatically generated and hosted by ",Object(n.b)("a",Object(r.a)({parentName:"p"},{href:"http://grlc.io/"}),"grlc.io")," based on the GitHub repository URL: ",Object(n.b)("a",Object(r.a)({parentName:"p"},{href:"http://grlc.io/api-git/MaastrichtU-IDS/food-claims-kg"}),"http://grlc.io/api-git/MaastrichtU-IDS/food-claims-kg")))),Object(n.b)("p",null,"Bonus: combine ",Object(n.b)("a",Object(r.a)({parentName:"p"},{href:"https://github.com/MaastrichtU-IDS/food-claims-kg"}),"grlc.io")," with the GraphDB search index query, and you have a Search API for your knowledge graph! \ud83d\udd0e"),Object(n.b)("blockquote",null,Object(n.b)("p",{parentName:"blockquote"},"The project is still active and reactive, feel free to ",Object(n.b)("a",Object(r.a)({parentName:"p"},{href:"https://github.com/CLARIAH/grlc/issues"}),"post an issue")," if you face any problem.")))}s.isMDXComponent=!0}}]);